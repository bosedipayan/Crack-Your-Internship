/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverse(ListNode* head)
    {
        ListNode* prev=NULL;
        ListNode* cur=head;
        ListNode* next;
        
        while(cur!=NULL)
        {
            next = cur->next;
            cur->next=prev;
            
            prev=cur;
            cur=next;
        }
        return prev;
    }
    
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        l1 = reverse(l1);
        l2 = reverse(l2);
        
        ListNode* temp = new ListNode();
        ListNode* ptr=temp;
        
        int l=0,h=0,c=0;
        while(l1 || l2 || c)
        {
            int s=0;
            if(l1)
            {
                s+=l1->val;
                l1=l1->next;
            }
            else
            {
                l=0;
            }
            if(l2)
            {
                s+=l2->val;
                l2=l2->next;
            }
            else
            {
                h=0;
            }
            
            s+=l+h+c;
            c=s/10;
            
            ListNode* node = new ListNode(s%10);
            ptr->next=node;
            ptr=ptr->next;
        }
        return reverse(temp->next);
    }
};
