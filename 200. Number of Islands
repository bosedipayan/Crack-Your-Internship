class Solution {
public:
    int n,m;
    int dx[4] = {0,0,1,-1};
    int dy[4] = {1,-1,0,0};
    
    void dfsCheck(int i,int j,vector<vector<char>>& grid)
    {
        if(i>=0 && i<n && j>=0 && j<m && grid[i][j]=='1')
        {
            grid[i][j]=0;
        
            for(int k=0;k<4;k++)
            {
                dfsCheck(i+dx[k],j+dy[k],grid);
            }
        }
    }
    int numIslands(vector<vector<char>>& grid) {
        n=grid.size();
        m=grid[0].size();
        
        int c=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]=='1')
                {
                    dfsCheck(i,j,grid);
                        c++;
                }
            }
        }
        return c;
    }
};
