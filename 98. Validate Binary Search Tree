/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool checkBST(TreeNode* root,long long int min,long long int max)
    {
        if(!root)
        {
            return true;
        }
        
        /*if(root->val >= max || root->val <= min)
        {
            return false;
        }
        
        return checkBST(root->left,min,root->val) && checkBST(root->right, root->val, max);*/
        
        if(root->val > min && root->val < max)
        {
            bool left = checkBST(root->left, min, root->val);
            bool right = checkBST(root->right, root->val, max);
            return left && right;
        }
        return false;
    }
    
    bool isValidBST(TreeNode* root) {
        if(!root) return true;
        return checkBST(root,-1e18,1e18);
    }
};
